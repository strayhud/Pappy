<%= javascript_include_tag 'galleriffic/jquery.galleriffic.js' %>
<%= javascript_include_tag 'galleriffic/jquery.opacityrollover.js' %>

<script type="text/javascript">
    var gallery;
	jQuery(document).ready(function($) {

		// Initially set opacity on thumbs and add
		// additional styling for hover effect on thumbs
		var onMouseOutOpacity = 0.67;
		$('#thumbs ul.thumbs li').opacityrollover({
			mouseOutOpacity:   onMouseOutOpacity,
			mouseOverOpacity:  1.0,
			fadeSpeed:         'fast',
			exemptionSelector: '.selected'
		});

		// Enable toggling of the caption
		var captionOpacity = 0.0;
		$('#captionToggle a').click(function(e) {
			var link = $(this);
			
			var isOff = link.hasClass('off');
			var removeClass = isOff ? 'off' : 'on';
			var addClass = isOff ? 'on' : 'off';
			var linkText = isOff ? 'Hide Caption' : 'Show Caption';
			captionOpacity = isOff ? 0.7 : 0.0;

			link.removeClass(removeClass).addClass(addClass).text(linkText).attr('title', linkText);
			$('#caption span.image-caption').fadeTo(1000, captionOpacity);
			
			e.preventDefault();
		});
		
		// Initialize Advanced Galleriffic Gallery
		gallery = $('#thumbs').galleriffic({
			delay:                     2500,
			numThumbs:                 25,
			preloadAhead:              10,
			enableTopPager:            true,
			enableBottomPager:         true,
			maxPagesToShow:            7,
			imageContainerSel:         '#slideshow',
			controlsContainerSel:      '#controls',
			captionContainerSel:       '#caption',
			loadingContainerSel:       '#loading',
			renderSSControls:          true,
			renderNavControls:         true,
			playLinkText:              'Play Slideshow',
			pauseLinkText:             'Pause Slideshow',
			prevLinkText:              '&lsaquo; Previous Photo',
			nextLinkText:              'Next Photo &rsaquo;',
			nextPageLinkText:          'Next &rsaquo;',
			prevPageLinkText:          '&lsaquo; Prev',
			enableHistory:             true,
			autoStart:                 false,
			syncTransitions:           true,
			defaultTransitionDuration: 900,
			onSlideChange:             function(prevIndex, nextIndex) {
				// 'this' refers to the gallery, which is an extension of $('#thumbs')
				this.find('ul.thumbs').children()
					.eq(prevIndex).fadeTo('fast', onMouseOutOpacity).end()
					.eq(nextIndex).fadeTo('fast', 1.0);
			},
			onTransitionOut:           function(slide, caption, isSync, callback) {
				slide.fadeTo(this.getDefaultTransitionDuration(isSync), 0.0, callback);
				caption.fadeTo(this.getDefaultTransitionDuration(isSync), 0.0);
			},
			onTransitionIn:            function(slide, caption, isSync) {
				var duration = this.getDefaultTransitionDuration(isSync);
				slide.fadeTo(duration, 1.0);
				
				// Position the caption at the bottom of the image and set its opacity
				var slideImage = slide.find('img');
				caption.width(slideImage.width()-1)
					.css({
						'bottom' : Math.floor((slide.height() - slideImage.outerHeight())+1),
						'left' : Math.floor((slide.width() - slideImage.width()) / 2+1) + slideImage.outerWidth() - slideImage.width()
					})
					.fadeTo(duration, captionOpacity);
			},
			onPageTransitionOut:       function(callback) {
				this.fadeTo('fast', 0.0, callback);
			},
			onPageTransitionIn:        function() {
				this.fadeTo('fast', 1.0);
			},
			onImageAdded:              function(imageData, $li) {
				$li.opacityrollover({
					mouseOutOpacity:   onMouseOutOpacity,
					mouseOverOpacity:  1.0,
					fadeSpeed:         'fast',
					exemptionSelector: '.selected'
				});
			}
		});
	});
	
</script>

<div id="page">
	<div id="container">
		<div id="gallery">
			<div id="controls" class="controls"></div>
			<div class="slideshow-container">
				<div id="loading" class="loader"></div>
				<div id="slideshow" class="slideshow"></div>
    			<div id="caption" class="caption-container"></div>
			</div>
		</div>
		<div style="clear: both;"></div>
		<div id="thumbs" class="navigation">
			<ul id="thumb_list" class="thumbs noscript">
                <% for slide in @presentation.slides %>
                   <%= render :partial => '/slides/play', :locals => {:slide => slide} %>
                <% end %>
 			</ul>
			<div style="clear:both;"></div>
		</div>
	</div>
</div>

